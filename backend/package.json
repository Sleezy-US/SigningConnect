\Starting Container
npm warn config production Use `--omit=dev` instead.
> signingconnect@0.1.0 build
> react-scripts build
Creating an optimized production build...
Compiled successfully.
File sizes after gzip:
  92.46 kB  build/static/js/main.b8590041.js
  5.48 kB   build/static/css/main.8c04df17.css
  1.77 kB   build/static/js/453.f1345d96.chunk.js
The project was built assuming it is hosted at /.
You can control this with the homepage field in your package.json.
The build folder is ready to be deployed.
You may serve it with a static server:
  npm install -g serve
  serve -s build
Find out more about deployment here:
  https://cra.link/deployment
node:internal/modules/cjs/loader:1143
  throw err;
  ^
Error: Cannot find module 'cors'
Require stack:
- /app/backend/server.js
    at Module._resolveFilename (node:internal/modules/cjs/loader:1140:15)
    at Module._load (node:internal/modules/cjs/loader:981:27)
    at Module.require (node:internal/modules/cjs/loader:1231:19)
    at require (node:internal/modules/helpers:177:18)
    at Object.<anonymous> (/app/backend/server.js:2:14)
    at Module._compile (node:internal/modules/cjs/loader:1364:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1422:10)
    at Module.load (node:internal/modules/cjs/loader:1203:32)
    at Module._load (node:internal/modules/cjs/loader:1019:12)
    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:128:12) {
  code: 'MODULE_NOT_FOUND',
  requireStack: [ '/app/backend/server.js' ]
}
Node.js v18.20.5
npm warn config production Use `--omit=dev` instead.
> signingconnect@0.1.0 build
> react-scripts build
Creating an optimized production build...
Compiled successfully.
File sizes after gzip:
  92.46 kB  build/static/js/main.b8590041.js
  5.48 kB   build/static/css/main.8c04df17.css
  1.77 kB   build/static/js/453.f1345d96.chunk.js
The project was built assuming it is hosted at /.
You can control this with the homepage field in your package.json.
The build folder is ready to be deployed.
You may serve it with a static server:
  npm install -g serve
  serve -s build
Find out more about deployment here:
  https://cra.link/deployment
node:internal/modules/cjs/loader:1143
  throw err;
  ^
Error: Cannot find module 'cors'
Require stack:
- /app/backend/server.js
    at Module._resolveFilename (node:internal/modules/cjs/loader:1140:15)
    at Module._load (node:internal/modules/cjs/loader:981:27)
    at Module.require (node:internal/modules/cjs/loader:1231:19)
    at require (node:internal/modules/helpers:177:18)
    at Object.<anonymous> (/app/backend/server.js:2:14)
    at Module._compile (node:internal/modules/cjs/loader:1364:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1422:10)
    at Module.load (node:internal/modules/cjs/loader:1203:32)
    at Module._load (node:internal/modules/cjs/loader:1019:12)
    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:128:12) {
  code: 'MODULE_NOT_FOUND',
  requireStack: [ '/app/backend/server.js' ]
}
Node.js v18.20.5
npm warn config production Use `--omit=dev` instead.
> signingconnect@0.1.0 build
> react-scripts build
Creating an optimized production build...